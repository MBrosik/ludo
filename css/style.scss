@import url("https://fonts.googleapis.com/css2?family=Architects+Daughter&display=swap");
// @import url("https://fonts.googleapis.com/css2?family=Courgette&display=swap");
// @import url("https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap");

* {
   box-sizing: border-box;
   font-family: "Architects Daughter", cursive;
   // font-family: "Courgette", cursive;
   // font-family: "Patrick Hand", cursive;
}

body {
   background-color: rgb(57, 57, 57);
   padding: 0;
   margin: 0;
}

// switch
.switch {
   position: relative;
   display: inline-block;
   width: 60px;
   height: 34px;

   input {
      opacity: 0;
      width: 0;
      height: 0;

      &:checked + .slider {
         background-color: #21f33d;
      }

      &:focus + .slider {
         box-shadow: 0 0 1px #21f33d;
      }

      &:checked + .slider:before {
         transform: translateX(26px);
      }
   }

   .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: 0.4s;

      &:before {
         position: absolute;
         content: "";
         height: 26px;
         width: 26px;
         left: 4px;
         bottom: 4px;
         background-color: white;
         -webkit-transition: 0.4s;
         transition: 0.4s;
      }

      &.round {
         border-radius: 34px;

         &:before {
            border-radius: 50%;
         }
      }
   }
}

$players_one: (
   red_player: rgb(248, 69, 69),
   blue_player: rgb(82, 82, 213),
   green_player: green,
   yellow_player: yellow,
);

.submit-button {
   height: 25px;
   border: solid 1px red;
   border-radius: 15px;
   outline: transparent;
   background-color: transparent;
   color: white;
   cursor: pointer;

   padding-left: 20px;
   padding-right: 20px;

   &:active {
      border: solid 3px red;
   }
}

#input-name-container {
   color: white;
   width: 1000px;

   display: flex;
   align-items: center;
   flex-direction: column;

   position: absolute;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);

   #name-div {
      width: 700px;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;

      margin-bottom: 60px;

      input[type="text"] {
         height: 23px;
         border: solid 2px black;
         border-radius: 5px;
         padding: 5px;

         &:focus {
            border: solid 1px black;
            outline: transparent;
         }
      }
   }

   #rooms-container {
      min-height: 10px;
      width: 700px;

      // border: 1px white solid;

      #column-names,
      .room {
         height: 50px;
         width: 100%;

         display: grid;
         grid-template-columns: 10% 17% 17% 17% 17% auto;

         & > div {
            display: flex;
            justify-content: center;
            align-items: center;

            border: 1px white dotted;
         }
      }

      #column-names {
         font-weight: 900;

         // ˆ
         // .selected::before {
         //    content: "ˆ";
         //    margin-right: 5px;
         //    font-size: 30px;
         //    transform: translate(0, 20%);
         // }

         // & > div {
         //    border: unset;
         // }

         @each $key, $val in $players_one {
            .#{$key}-name {
               color: white;
               text-shadow: -1px -1px 3px #{$val}, 1px -1px 3px #{$val}, -1px 1px 3px #{$val}, 1px 1px 3px #{$val};

               @if $key == "yellow_player" {
                  $shadow_color: #9d9d2c;
                  text-shadow: -1px -1px 3px #{$shadow_color}, 1px -1px 3px #{$shadow_color},
                     -1px 1px 3px #{$shadow_color}, 1px 1px 3px #{$shadow_color};
               }
            }
         }
      }
      .room {
         font-size: 14px;

         .create-room-container {
            grid-column: 1 / span 6;
         }
      }
   }
}

#game-container {
   width: 1000px;
   margin-left: auto;
   margin-right: auto;

   header {
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;
      gap: 13px;
      margin-top: 10px;
      margin-bottom: 35px;

      .players {
         width: 120px;
         height: 44px;
         background-color: rgb(136, 132, 132);
         border-radius: 34px;
         display: flex;
         align-items: center;
         justify-content: center;
         text-align: center;
         transition: all ease 0.5s;
         position: relative;

         word-wrap: break-word;
         color: white;

         text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;

         &.joined {
            background-color: white;
         }

         @each $key, $val in $players_one {
            &##{$key} {
               &.ready {
                  @if $key == "blue_player" {
                  }
                  background-color: $val;
               }
            }
         }

         &[data-showtime="true"]::after {
            position: absolute;
            transform: translate(-70%, -30%);
            top: 0;
            left: 100%;

            display: flex;
            align-items: center;
            justify-content: center;

            width: 25px;
            height: 25px;
            background-color: rgb(241, 100, 100);

            border-radius: 20px;
            border: 1px solid black;

            font-size: 15px;
            content: attr(data-time);
         }
      }

      #be-ready {
         &-span {
            width: 80px;
            text-align: center;
            color: white;
         }
      }
   }

   #canvas-content {
      position: relative;
      width: fit-content;
      height: 620px;
      padding: 0;

      border-radius: 20px;
      border: 10px black solid;
      overflow: hidden;

      background-color: #bba14c;

      // box-sizing: content-box;
      canvas {
         padding: 0;
         margin: 0;
      }
      .roll-button {
         outline: 0;
         border-radius: 20px;
         border: 1px solid black;
         width: 100px;
         height: 30px;

         position: absolute;
         transform: translate(-50%, -50%);
         top: 50%;
         left: 20%;

         cursor: pointer;
      }

      // ----------
      // dice
      // ----------
      .dice-container {
         $width: 50px;
         width: $width;
         height: $width;

         transform: translate(-50%, -50%);
         top: 30%;
         left: 20%;

         perspective: 1000px;
         position: absolute;

         .dice {
            height: $width;
            width: $width;

            transform-style: preserve-3d;
            transition: transform 1s;

            position: absolute;

            transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);

            img {
               width: $width;
               height: $width;
               background-color: white;
               background-color: black;
               display: block;
               position: absolute;

               margin: 0;

               &.front {
                  transform: rotateZ(0deg) translateZ(-#{$width/2});
               }
               &.back {
                  transform: rotateZ(-180deg) translateZ(#{$width/2});
               }

               &.right {
                  transform: rotateY(90deg) translateZ(#{$width/2});
               }
               &.left {
                  transform: rotateY(-90deg) translateZ(#{$width/2});
               }

               &.top {
                  transform: rotateX(90deg) translateZ(#{$width/2});
               }
               &.bottom {
                  transform: rotateX(-90deg) translateZ(#{$width/2});
               }
            }
         }
      }

      .pawn-div {
         width: 20px;
         height: 20px;
         transform: translate(-50%, -50%);

         border-radius: 50%;
         border: black 2px solid;

         position: absolute;

         cursor: pointer;

         $players: (
            red_player: (
               def: map-get($players_one, red_player),
               blinks: rgb(245, 229, 229),
            ),
            blue_player: (
               def: map-get($players_one, blue_player),
               blinks: rgb(219, 219, 241),
            ),
            green_player: (
               def: map-get($players_one, green_player),
               blinks: rgb(222, 245, 222),
            ),
            yellow_player: (
               def: map-get($players_one, yellow_player),
               blinks: rgb(70, 70, 23),
            ),
         );

         @each $key, $val in $players {
            &.#{$key} {
               &.blink {
                  animation-name: blinking-#{$key};
                  animation-duration: 1s;
                  animation-iteration-count: infinite;
                  animation-timing-function: ease-in;
                  animation-direction: alternate;
               }
            }

            @keyframes blinking-#{$key} {
               0% {
                  // opacity: 0;
                  background-color: #{map-get($val, def)};
                  transform: translate(-50%, -50%) scale(1);
               }
               100% {
                  // opacity: 1;
                  background-color: #{map-get($val, blinks)};
                  transform: translate(-50%, -50%) scale(1.25);
               }
            }
         }
      }

      .mouseover-pawn {
         width: 20px;
         height: 20px;
         transform: translate(-50%, -50%);

         background-color: grey;

         border-radius: 50%;
         border: black 2px solid;

         position: absolute;
      }
   }
}

.exit-container {
   width: 100%;
   // height: 100%;
   // height: min(690px, 100%);

   min-height: 690px;
   height: 100%;

   background-color: rgba(0, 0, 0, 0.707);

   position: absolute;
   top: 0;
   left: 0;

   .exit-div {
      height: 300px;
      width: 500px;

      border: 4px solid white;
      border-radius: 10px;

      background-color: rgb(57, 57, 57);

      position: absolute;
      top: 50%;
      left: 50%;

      transform: translate(-50%, -50%);

      font-size: 30px;
      color: white;
      font-weight: normal;

      .exit-title {
         width: 80%;
         height: 50px;

         text-align: center;

         position: absolute;
         top: 40px;
         left: 50%;

         transform: translate(-50%, -50%);
      }

      #exit-submit,
      #exit-cancel {
         width: 150px;
         height: 50px;
         border-radius: 40px;

         position: absolute;
         top: 75%;

         transform: translate(-50%, -50%);

         font-size: 25px;
      }

      #exit-submit {
         left: 30%;
      }
      #exit-cancel {
         left: 70%;
      }
   }
}

#end-game-container {
   position: absolute;
   top: 0;
   left: 0;

   z-index: 8;

   width: 100%;
   height: 100%;
   // min-height: 1000px;

   color: white;
   background-color: rgb(57, 57, 57);

   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;

   animation-name: fadeIn;
   animation-duration: 4s;

   @keyframes fadeIn {
      0% {
         opacity: 0;
      }
      // 20% {
      //    opacity: 0.2;
      // }
      // 40% {
      //    opacity: 0.4;
      // }
      // 60% {
      //    opacity: 0.6;
      // }
      // 80% {
      //    opacity: 0.8;
      // }
      100% {
         opacity: 1;
      }
   }

   #end-h1 {
      margin-bottom: 1px;

      font-size: clamp(30px, 5vw, 70px);
   }
   #win-or-lose-info {
      margin-top: 40px;
      margin-bottom: 20px;
      font-size: clamp(14px, 2vw, 35px);

      #current-player {
         @each $key, $val in $players_one {
            &.#{$key} {
               color: $val;
            }
         }
      }
   }
   #winner-container {
      border-top: 1px white solid;
      width: clamp(292px, 50%, 600px);
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;

      opacity: 0;

      #winner-title {
         margin-bottom: 2px;
         font-size: clamp(18px, 3vw, 35px);
      }
      #winner-name {
         margin-top: 1px;
         font-size: clamp(13px, 2vw, 30px);

         @each $key, $val in $players_one {
            &.#{$key} {
               color: $val;
            }
         }
      }
   }

   #winner-exit-button {
      margin-top: 10px;
      font-size: clamp(18px, 3vw, 35px);
      width: clamp(92px, 20%, 200px);
      height: clamp(40px, 10%, 100px);

      border-radius: clamp(50px, 17%, 90px);

      margin-top: 60px;
   }
}
